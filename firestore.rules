rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function getUserRole() {
      return request.auth != null
        ? (
            exists(/databases/$(database)/documents/users/$(request.auth.uid))
              ? (
                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role is string
                    ? get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role
                    : ''
                )
              : ''
          )
        : '';
    }

    function isAdminUser() {
      return getUserRole() == 'admin';
    }

    function isAuthenticatedUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isCompanyOwner(companyId) {
      return request.auth != null && request.auth.uid == companyId;
    }

    function isVerificationStatusLocked() {
      return resource != null &&
        resource.data.verification is map &&
        request.resource.data.verification is map &&
        request.resource.data.verification.status == resource.data.verification.status;
    }

    function isNonAdminRole(role) {
      return role == 'company' || role == 'user';
    }

    function isTrackingStatus(value) {
      return value in ['en_route', 'arrived', 'cancelled'];
    }

    match /companies/{companyId} {
      // Owners can manage their own company profile
      allow create: if
        isCompanyOwner(companyId) &&
        request.resource.data.verified == false &&
        request.resource.data.verification is map &&
        request.resource.data.verification.status == 'pending';
      allow read: if (resource != null && resource.data.verified == true) || isCompanyOwner(companyId) || isAdminUser();
      allow update: if
        (
          isCompanyOwner(companyId) &&
          request.resource.data.verified == resource.data.verified &&
          isVerificationStatusLocked()
        ) ||
        isAdminUser();
      allow delete: if isCompanyOwner(companyId) || isAdminUser();
    }

    match /notify_me/{docId} {
      // Anyone may add an email address
      allow create: if true;
      allow read, update, delete: if false;
    }

    match /users/{userId} {
      allow create: if isAuthenticatedUser(userId)
        && request.resource.data.keys().hasOnly(['email', 'email_lowercase', 'role', 'created_at', 'updated_at'])
        && request.resource.data.keys().hasAll(['email', 'email_lowercase', 'role', 'created_at', 'updated_at'])
        && request.resource.data.email is string
        && request.resource.data.email.size() > 0
        && request.resource.data.email_lowercase is string
        && request.resource.data.email_lowercase.size() > 0
        && isNonAdminRole(request.resource.data.role)
        && request.resource.data.created_at is timestamp
        && request.resource.data.updated_at is timestamp;

      allow read: if isAuthenticatedUser(userId) || isAdminUser();

      allow update: if (
          isAuthenticatedUser(userId)
          && request.resource.data.keys().hasOnly(['email', 'email_lowercase', 'role', 'created_at', 'updated_at'])
          && request.resource.data.email is string
          && request.resource.data.email.size() > 0
          && request.resource.data.email_lowercase is string
          && request.resource.data.email_lowercase.size() > 0
          && request.resource.data.role == resource.data.role
          && request.resource.data.created_at == resource.data.created_at
          && request.resource.data.updated_at is timestamp
        ) || isAdminUser();

      allow delete: if isAdminUser();
    }

    match /reviews/{reviewId} {
      allow read: if true;
      allow create, update, delete: if isAdminUser();
    }

    match /review_requests/{requestId} {
      allow create: if request.resource.data.keys().hasOnly([
            'company_id',
            'company_name',
            'contact_type',
            'customer_email',
            'created_at',
            'status'
          ]) &&
          request.resource.data.keys().hasAll([
            'company_id',
            'company_name',
            'contact_type',
            'customer_email',
            'created_at',
            'status'
          ]) &&
          request.resource.data.company_id is string &&
          request.resource.data.company_id.size() > 0 &&
          request.resource.data.company_name is string &&
          request.resource.data.company_name.size() > 0 &&
          request.resource.data.contact_type is string &&
          request.resource.data.contact_type.size() > 0 &&
          request.resource.data.customer_email is string &&
          request.resource.data.customer_email.size() > 0 &&
          request.resource.data.created_at is timestamp &&
          request.resource.data.status is string &&
          request.resource.data.status.size() > 0;

      allow read, update, delete: if false;
    }

    match /registration_email_requests/{requestId} {
      allow create: if isAdminUser();
      allow read, update, delete: if false;
    }

    match /tracking_requests/{requestId} {
      allow create: if request.resource.data.keys().hasOnly([
            'companyId',
            'companyName',
            'companyLocation',
            'userLocation',
            'distanceKm',
            'durationMinutes',
            'requestedAt',
            'eta',
            'status',
            'clientSecret',
            'createdAt',
            'updatedAt'
          ]) &&
          request.resource.data.keys().hasAll([
            'companyId',
            'companyName',
            'companyLocation',
            'userLocation',
            'distanceKm',
            'durationMinutes',
            'requestedAt',
            'eta',
            'status',
            'clientSecret',
            'createdAt',
            'updatedAt'
          ]) &&
          request.resource.data.companyId is string &&
          request.resource.data.companyId.size() > 0 &&
          request.resource.data.companyName is string &&
          request.resource.data.companyName.size() > 0 &&
          request.resource.data.companyLocation is map &&
          request.resource.data.companyLocation.lat is number &&
          request.resource.data.companyLocation.lng is number &&
          request.resource.data.userLocation is map &&
          request.resource.data.userLocation.lat is number &&
          request.resource.data.userLocation.lng is number &&
          request.resource.data.distanceKm is number &&
          request.resource.data.distanceKm >= 0 &&
          request.resource.data.durationMinutes is number &&
          request.resource.data.durationMinutes >= 0 &&
          request.resource.data.requestedAt is timestamp &&
          request.resource.data.eta is timestamp &&
          isTrackingStatus(request.resource.data.status) &&
          request.resource.data.status != 'cancelled' &&
          request.resource.data.clientSecret is string &&
          request.resource.data.clientSecret.size() >= 16 &&
          request.resource.data.createdAt is timestamp &&
          request.resource.data.updatedAt is timestamp;

      allow read: if resource != null && (isCompanyOwner(resource.data.companyId) || isAdminUser());

      allow update: if
        (resource != null && (isCompanyOwner(resource.data.companyId) || isAdminUser())) ||
        (
          request.auth == null &&
          request.resource.data.keys().hasOnly([
            'companyId',
            'companyName',
            'companyLocation',
            'userLocation',
            'distanceKm',
            'durationMinutes',
            'requestedAt',
            'eta',
            'status',
            'clientSecret',
            'createdAt',
            'updatedAt',
            'endedAt'
          ]) &&
          request.resource.data.companyId == resource.data.companyId &&
          request.resource.data.companyName == resource.data.companyName &&
          request.resource.data.companyLocation == resource.data.companyLocation &&
          request.resource.data.userLocation == resource.data.userLocation &&
          request.resource.data.distanceKm == resource.data.distanceKm &&
          request.resource.data.durationMinutes == resource.data.durationMinutes &&
          request.resource.data.requestedAt == resource.data.requestedAt &&
          request.resource.data.eta == resource.data.eta &&
          request.resource.data.clientSecret == resource.data.clientSecret &&
          request.resource.data.createdAt == resource.data.createdAt &&
          isTrackingStatus(request.resource.data.status) &&
          request.resource.data.updatedAt is timestamp &&
          (
            (resource.data.endedAt == null && request.resource.data.endedAt == null) ||
            request.resource.data.endedAt == resource.data.endedAt ||
            request.resource.data.endedAt is timestamp
          )
        );

      allow delete: if resource != null && (isCompanyOwner(resource.data.companyId) || isAdminUser());
    }

    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
